{{define "title"}}Update Assignment{{end}}
{{define "head"}}
    <link rel="stylesheet" href="/static/css/simplemde.min.css">
    <style>
        .CodeMirror {
            height: 300px;
        }

        .CodeMirror-code::selection {
            background: #000;
        }

        .CodeMirror-code::-moz-selection {
            background: #000;
        }
    </style>
{{end}}
{{define "content"}}
    {{if .Errors}}
        {{range .Errors}}
            <div class="alert alert-warning">{{.}}</div>
        {{end}}
    {{end}}




    <div class="col">
        <h1 class="display-4">Update assignment</h1>
    </div>
    <form id="assignmentForm" action="/admin/assignment/update" method="POST">
        <hr>
        <!-- TODO (Svein): Make this for horizontal. See https://getbootstrap.com/docs/4.3/components/forms/#horizontal-form -->
        <div class="row">
            <div class="col-12 col-lg">
                <div class="form-group">
                    <label for="name">Name</label>
                    <input type="text" id="name" name="name" class="form-control" placeholder="Assignment Name"
                           value="{{.Assignment.Name}}" required>
                </div>

                <div class="form-group">
                    <label for="course_id">Course</label>
                    <select name="course_id" id="course_id" class="form-control" required>
                        {{$A := .Assignment}}
                        {{range $C := .Courses}}
                            <option value="{{$C.ID}}"{{if eq $C.ID $A.CourseID}} selected{{end}}>{{$C.Code}} {{$C.Name}}</option>
                        {{end}}
                    </select>
                </div>

                <div class="form-group">
                    <label for="publish">Publish</label>
                    <div class="input-group">
                        <input type="datetime-local" name="publish" id="publish" class="form-control"
                               value="{{.Publish}}" required>
                        <!-- TODO uncomment after alpha
                        <div class="input-group-append">
                            <button class="btn btn-outline-secondary" type="button" id="publish_now">Now</button>
                        </div>
                        -->
                    </div>
                </div>

                <div class="form-group">
                    <label for="deadline">Deadline</label>
                    <input type="datetime-local" name="deadline" id="deadline" class="form-control"
                           value="{{.Deadline}}" required>
                </div>

                <div class="form-group">
                    <label for="simplemde">Description</label>
                    <textarea name="description" id="simplemde"
                              placeholder="Description (Hint: Markdown)">{{.Assignment.Description}}</textarea>
                </div>
            </div>

            <div class="col-12 col-lg">

                <div class="col">
                    <h3>Submission Form</h3>
                    <div class="form-group">
                        <label for="submission_id">Select Form</label>
                        <select name="submission_id" id="submission_id" class="form-control">
                            <!-- TODO : delete all former submissions if the form is changed -->
                            <option value="">None</option>
                            {{range $S := .Submissions}}
                                <option value="{{$S.ID}}"{{if eq $S.ID $A.SubmissionID.Int64}} selected{{end}}>{{$S.Form.Name}}</option>
                            {{end}}
                            <!-- TODO (Svein): Create an API-call for getting the JSON og the submission form -->
                        </select>
                    </div>

                    <hr>
                </div>

                <div class="col">
                    <h3>Peer Review</h3>
                    <button type="button" onclick="reviewButtonFunction()" id="reviewButton" class="btn btn-danger btn-sm">Disable</button>

                    <h5>Review Form</h5>
                    <div class="form-group">
                        <label for="review_id">Select Form</label>
                        <select name="review_id" id="review_id" class="form-control">
                            <option value="0">None</option>
                            {{range $R := .Reviews}}
                                <option value="{{$R.ID}}"{{if eq $R.ID $A.ReviewID.Int64}} selected{{end}}>{{$R.Form.Name}}</option>
                            {{end}}
                        </select>
                    </div>
                    <div class="form-group" id="review_deadline_container">
                        <label for="review_deadline">Review Deadline</label>
                        <input type="datetime-local" name="review_deadline" id="review_deadline" class="form-control"
                               value="{{.ReviewDeadline}}">
                    </div>

                    <hr>

                    <h5>Number of reviews for each student</h5>
                    <div class="form-group">
                        <label for="reviewers">How many submissions should every student review on this
                            assignment <br> Set to 0 to disable this feature</label>
                        <select name="reviewers" id="reviewers" class="form-control" required>
                            option
                            {{if and .Assignment.Reviewers.Valid (NULLINT64EQUALSINT .Assignment.Reviewers 0)}}
                                <option value="{{.Assignment.Reviewers.Int64}}" selected>Any</option>
                            {{else if .Assignment.Reviewers.Valid}}
                                <option value="{{.Assignment.Reviewers.Int64}}" selected>{{.Assignment.Reviewers.Int64}}</option>
                            {{end}}
                            <script>
                                for (let i = 0; i <= 6; i++) {
                                    if (i == 0) {
                                        document.write(`<option value="${i}">Any</option>`);
                                    } else {
                                        document.write(`<option value="${i}">${i}</option>`);
                                    }
                                }
                            </script>
                        </select>
                    </div>
                    <hr>
                    <div class="form-group">
                        <h5>Messages on submissions</h5>
                        <button type="button" onclick="messagesEnabledFunction()" id="messagesEnabledButton" class="btn btn-danger btn-sm">Disabled</button>
                        <input type="hidden" id="messages_enabled" name="messages_enabled" value="false">
                    </div>
                </div>

            </div>

        </div>

        <div class="row mb-5">
            <div class="col">
                <input type="hidden" name="id" value="{{.Assignment.ID}}">
                <input type="hidden" id="review_enabled" name="review_enabled" value="{{if .Assignment.ReviewEnabled}}true{{else}}false{{end}}">
                <input type="submit" class="btn btn-success btn-lg btn-block" id="submit">
            </div>
        </div>

    </form>
{{end}}
{{define "foot"}}
    <script src="/static/js/time.js"></script>
    <script src="/static/js/simplemde.min.js"></script>
    <script>

        let enabledInput = document.getElementById("review_enabled");
        let btn = document.getElementById("reviewButton");
        let reviewDeadline = document.getElementById('review_deadline');
        let reviewDeadlineContainer = document.getElementById('review_deadline_container');
        let reviewSelect = document.getElementById('review_id');
        let reviewers = document.getElementById('reviewers');

        let messagesEnabled = document.getElementById("messages_enabled");
        let messageEnabledBtn = document.getElementById("messagesEnabledButton");

        function messagesEnabledFunction(){

            if(messagesEnabled.getAttribute("value") == "false"){
                messagesEnabled.removeAttribute("value");
                messagesEnabled.setAttribute("value", "true");

                messageEnabledBtn.classList.remove("btn-danger");
                messageEnabledBtn.classList.add("btn-success");
                messageEnabledBtn.innerText = "Enabled"

            }else if(messagesEnabled.getAttribute("value") == "true"){
                messagesEnabled.removeAttribute("value");
                messagesEnabled.setAttribute("value", "false");

                messageEnabledBtn.classList.remove("btn-success");
                messageEnabledBtn.classList.add("btn-danger");
                messageEnabledBtn.innerText = "Disabled"
            }
        }

        function reviewButtonFunction(){

            if(enabledInput.getAttribute("value") == "false"){
                activateReviews();
            }else if(enabledInput.getAttribute("value") == "true"){
                deactiveReviews();
            }
        }

        function activateReviews(){
            btn.classList.remove("btn-success");
            btn.classList.add("btn-danger");
            btn.innerText = "Disable";

            enabledInput.removeAttribute("value");
            enabledInput.setAttribute("value", "true");

            reviewDeadline.removeAttribute("readonly");
            reviewDeadline.setAttribute("required", "");

            reviewSelect.removeAttribute("readonly");
            reviewers.removeAttribute("readonly");
        }

        function deactiveReviews(){
            btn.classList.remove("btn-danger");
            btn.classList.add("btn-success");
            btn.innerText = "Enable";

            enabledInput.removeAttribute("value");
            enabledInput.setAttribute("value", "false");

            reviewDeadline.setAttribute("readonly", "");
            reviewDeadline.removeAttribute("required");

            reviewSelect.setAttribute("readonly", "");
            reviewers.setAttribute("readonly", "");
        }

        window.onload = function () {
            // Enable the SimpleMDE
            let simplemde = new SimpleMDE({
                element: document.getElementById('simplemde'),
                hideIcons: ["side-by-side", "fullscreen"],
                lineWrapping: true,
            });

            {{if not .ReviewDeadline}}
            reviewDeadline.setAttribute("value", getDeadlinePlusOneMonth({{.Assignment.Deadline}}));
            {{end}}

            {{if .Assignment.ReviewEnabled}}
            activateReviews();
            {{else}}
            deactiveReviews();
            {{end}}

            // On submit form, call this function
            document.getElementById('assignmentForm').onsubmit = function () {
                CheckSubmissionForm();
            };
        };

        /**
         * CheckSubmissionForm
         *
         * Checks if one or more users(students) has delivered with a specified submission form in a
         * specified assignment. If it's true, give the admin a warning and ask if it still should be changed.
         * If yes(ok), do nothing but if no(Cancel), change the value back to the original value.
         * */
        function CheckSubmissionForm() {

            // Get element
            let selectedSubmissionID = document.getElementById('submission_id');

            // Declare submission ID
            let id;

            // Parse to int, -1 if None is selected
            if (selectedSubmissionID.value.length == 0) {
                id = 0;
            } else {
                // Parse to INT
                id = parseInt(selectedSubmissionID.value, 10);
            }

            // Parse former submission id
            let formerID = parseInt({{ .Assignment.SubmissionID.Int64 }}, 10);

            // If the submission form is changed
            if (id != formerID) {

                // Check if a student has answered it and ask teacher for confirmation if so
                let len = parseInt({{ .SubmissionCount }}, 10);

                // If one or more users has answered this subForm, Ask user and if it still should be changed, if no, change back to original value
                if (len > 0 && !confirm("WARNING! " + len + " students has already answered this submission form. Do you still want to change it? (This will delete former submissions)")) {
                    selectedSubmissionID.value = formerID;
                }
            }
        }

        function getDeadlinePlusOneMonth(deadline){
            var today = new Date(deadline);
            today.setMonth(today.getMonth()+1);

            return today.toISOString().slice(0, -5);
        }
    </script>
{{end}}